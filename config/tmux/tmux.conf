set-option -g  default-shell      "/usr/bin/bash"
set -s escape-time 0

unbind C-b
set-option -g prefix M-r
bind-key M-r send-prefix

set -g base-index 0

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# copy mode
bind -n M-C-o copy-mode

# DON'T re-number windows when one is closed
set -g renumber-windows off

# vim-like pane switching
#bind -n M-C-^ last-window

# selecting next/previous window
bind -n M-C-z select-window -t :-
bind -n M-C-u select-window -t :+

bind-key -n M-C-s if-shell 'tmux select-window -T -t :0' '' 'new-window -t :0'
bind-key -n M-C-d if-shell 'tmux select-window -T -t :1' '' 'new-window -t :1'
bind-key -n M-C-t if-shell 'tmux select-window -T -t :2' '' 'new-window -t :2'
bind-key -n M-C-r if-shell 'tmux select-window -T -t :3' '' 'new-window -t :3'
bind-key -n M-C-n if-shell 'tmux select-window -T -t :4' '' 'new-window -t :4'

# Pane selection
bind -n M-C-y select-pane -L
bind -n M-C-h select-pane -D
bind -n M-C-a select-pane -U
bind -n M-C-e select-pane -R

# resizing panes
bind -r M-y resize-pane -L 5
bind -r M-h resize-pane -D 5
bind -r M-a resize-pane -U 5
bind -r M-e resize-pane -R 5

# Toggle full screen for active pane
bind -n M-C-p resize-pane -Z

# split panes
bind -n M-C-k split-window -v
bind -n M-C-f split-window -h

# Kill pane without prompt
bind-key -n M-C-q kill-pane

# Kill window without prompt
#bind-key -n M-C-q kill-window

# reload tmux's config file
bind -r r source-file ~/.tmux.conf \; display "Reloaded"

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# forget the find window.  That is for chumps
#bind-key -n M-C-f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# Switch to last client
bind-key -n M-C-c  switch-client -l

# Open gh dash in a new window
bind -n M-C-m new-window -n 'Github' gh dash

# Open lazygit in a new window
bind -n M-C-g new-window -n 'Lazygit' lazygit

bind-key -n M-C-i run-shell "tmux neww tmux-cht.sh"
bind-key -r h run-shell "~/.local/bin/tmux-sessionizer ~/dotfiles/dev"
bind-key -r a run-shell "~/.local/bin/tmux-sessionizer ~/projects/zero2prod/"
#bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
#bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
#bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
#bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
#bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
#bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
#bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
#bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"

#################################################################################
##                                                                             ##
## ████████╗███╗   ███╗██╗   ██╗██╗  ██╗    ██████╗ ██████╗ ███╗   ██╗███████╗ ##
## ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝   ██╔════╝██╔═══██╗████╗  ██║██╔════╝ ##
##    ██║   ██╔████╔██║██║   ██║ ╚███╔╝    ██║     ██║   ██║██╔██╗ ██║█████╗   ##
##    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗    ██║     ██║   ██║██║╚██╗██║██╔══╝   ##
##    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗██╗╚██████╗╚██████╔╝██║ ╚████║██║      ##
##    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝      ##
##                                                                             $#
#################################################################################
## Stolen from Kanagawa theme guy tmux config
set-option -g status-position top

# misc
# set-option -g  default-command    "/opt/local/bin/reattach-to-user-namespace -l $SHELL"
set-option -sg default-terminal   "tmux-256color"
set-option -ga terminal-overrides ",*256col*:Tc"
set-option -sa terminal-overrides ",xterm-kitty:Tc"
set-option -as terminal-features ',xterm-kitty:RGB'
set-option -as terminal-features ',xterm-kitty:usstyle'
set-option -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours

# set -s extended-keys on
# set -as terminal-overrides '*:Eneks=\E[>4;1m'
# set -as terminal-overrides '*:Dseks=\E[>4;m'
# set -as terminal-features 'xterm*:extkeys'

set-option -sg escape-time 30
set-option -g  focus-events on
set-option -g  mouse on
set-option -g  status-keys vi
set-option -g  set-clipboard on
set-option -g  history-limit 50000
set-option -g  focus-events on
set-option -g  display-time 5000

set-window-option -gq utf8 on
set-window-option -g  monitor-activity on
set-window-option -g  mode-keys vi
set-window-option -g  automatic-rename on
#set-window-option -g  xterm-keys on

# command-message-status-style
# set -g message-style 'bg=#282828,fg=yellow,bold'
set -g message-style 'bg=default,fg=yellow,bold'
# set -g status-style  'bg=#282828'
set -g status-style  'bg=default'

# Titles
set -g set-titles on
set -g set-titles-string '#{window_index}.#{pane_index} ☞ #{pane_current_command}'

# pane-borders
# set -g pane-border-status top
%if "#{!=:$SSH_CONNECTION,}"
set -gF pane-border-style '#{?pane_synchronized,fg=red,fg=blue}'
set -gF pane-active-border-style '#{?pane_synchronized,fg=brightred,fg=yellow}'
%else
set -gF pane-border-style '#{?pane_synchronized,fg=red,fg=white}'
set -gF pane-active-border-style '#{?pane_synchronized,fg=brightred,fg=green}'
%endif
set -g pane-border-format "(#{pane_index}) #{pane_title} → #{pane_current_command}"
# }}}

# mode style {{{
# setw -g mode-style 'bg=green, fg=colour232, bold'
setw -g mode-style 'bg=green, fg=black, bold'
# }}}

# status line {{{
set -g status-interval 4
# Powerline glyphs:     
    # status right

# TMUX_PANE_CURRENT_PATH='#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g")'
# TMUX_PANE_CURRENT_PATH_var='#(tmuxcurpath=$(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g"); \
#                             winwidth=$(tmux display-message -p "#{window_width}"); \
#                             winoverflow=$(echo "${#tmuxcurpath} > $winwidth * 0.4" | bc); \
#                             [[ $winoverflow -eq 1 ]] && echo "$tmuxcurpath" | perl -pE "s|(/.)[^/]*(?![^/]*$)|\1|g"; \
#                             [[ $winoverflow -eq 1 ]] || echo "$tmuxcurpath")'
# set -g  status-right "#[bg=default,fg=white]$TMUX_PANE_CURRENT_PATH_var "

TMUX_PANE_HOME_SHORTENED_PATH="#{s|\\$HOME|~|:pane_current_path}" # replace $HOME with ~ in current_path
%hidden PANE_ALL_SHORTENED_PATH="#{s|(/.)[^/]*|\\1|:$TMUX_PANE_HOME_SHORTENED_PATH}" # transform [~]/aaa/bbbb/ccc to [~]/a/b/c
%hidden PANE_CUR_DIR="#{b:pane_current_path}" # get current directory name (e.g. ccc)
%hidden PANE_SHORTENED_PATH="#{s|/[^/]*$|/$PANE_CUR_DIR|:$PANE_ALL_SHORTENED_PATH}" # transform [~]/a/b/c to [~]/a/b/ccc
%hidden PATH_LEN='#(tmux display-message -p "#{T:TMUX_PANE_HOME_SHORTENED_PATH}" |wc -c)' # get number of charactes in path
%hidden PATH_OVERFLOW="#{e|>:$PATH_LEN,#{e|*|f:#{window_width},0.4}}" # check if path len is > 0.4*{window_width}
#{s|/[^/]*$|#{s|.*(/[^/]*$)|\\1|:pane_current_path}|:#{s|(/.)[^/]*|\\1|:#{s|\\$HOME|~|:pane_current_path}}} "
set -g status-right " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.yml)"
set -ga  status-right "#[bg=default,fg=brightblue] #{?$PATH_OVERFLOW,$PANE_SHORTENED_PATH,$TMUX_PANE_HOME_SHORTENED_PATH} "
set -ga status-right "#[fg=brightblack]#U@#[bold]#H #{online_status}"
set -g status-right-length 150
    # memcpu $TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load
    # cpu {cpu_fg_color}#{cpu_percentage}#{cpu_icon}
    # statusline plugins
set -g @online_icon  "#[fg=brightgreen,none] #[default]"
set -g @offline_icon "#[fg=red,none] #[default]"
    # status left
set -g  status-left '#[fg=black,bold,bg=green]#{pane_mode}#[fg=green,none]'
set -ga status-left '#{?client_prefix,#[bg=#d65c0d],#[bg=default]} #[fg=brightwhite,bold]#S#[fg=none] '
set -ga status-left '#[bg=default]#{?client_prefix,#[fg=#d65c0d] ,#[fg=default]  }'
set -g status-left-length 50
set -ga status-left " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux-branch.yml)"

# Windows status
setw -g window-status-activity-style fg=yellow
setw -g window-status-bell-style     fg=red
setw -g window-status-format         "#[fg=yellow]#I#[fg=green]#F #[fg=white]#W"
setw -g window-status-current-format "#[fg=brightyellow]#I#[fg=brightgreen]#F #[fg=brightwhite,bold,underscore]#W"
setw -g window-status-separator      "#[fg=brightwhite,bold]  "
# setw -g window-status-last-style default
# setw -g window-status-current-style
# setw -g window-status-style
set -g status-justify left

###########################
# Plugins
###########################

# # Plugin manager
# set -g @plugin 'tmux-plugins/tpm'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
